# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/198sJOjELulF6K28CfgO8fQwNG1libUu3
"""

import pandas as pd
from sklearn import decomposition
import matplotlib.pyplot as plt
import altair as alt
from sklearn.manifold import TSNE
import numpy as np
import os

df = pd.read_csv(os.path.expanduser("~/Desktop/GENES AND GEOGRAPHY/vcf_to_matrix/matrix.csv"))

df.rename(columns={"Unnamed: 0": "Sample"}, inplace=True)

non_snp_columns = ["Population code", "Sample"]

df_snps = df.drop(non_snp_columns, axis=1)
matrix = df_snps.to_numpy()
print(matrix.shape)

pca = decomposition.PCA(n_components=2)
pca.fit(matrix)

print(pca.explained_variance_ratio_)
print(pca.singular_values_)

to_plot = pca.transform(matrix)

plt.scatter(x=to_plot[:,0], y=to_plot[:,1])

df_plot = df[non_snp_columns].copy()

df_plot["PC1"] = to_plot[:,0]
df_plot["PC2"] = to_plot[:,1]

alt.Chart(df_plot).mark_point().encode(
    x="PC1",
    y="PC2",
    color=alt.Color("Population code", scale=alt.Scale(scheme="category20"))
)

pop = pd.read_csv(os.path.expanduser("~/Desktop/GENES AND GEOGRAPHY/Population Data set/igsr_samples.tsv", sep="\t"))
df_plot = df_plot.merge(pop, on="Population code", how="inner")

alt.data_transformers.enable('default', max_rows=200000)

X = matrix
X_embedded = TSNE(n_components=2, learning_rate='auto',
                  init='random').fit_transform(X)
print(X_embedded.shape)

num_rows_df_plot = len(df_plot)
print(num_rows_df_plot)

padded_X_embedded = np.pad(
    X_embedded,
    ((0, num_rows_df_plot - X_embedded.shape[0]), (0, 0)),
    mode='constant',
    constant_values=np.nan
)

df_plot['tsne1'] = padded_X_embedded[:, 0]
df_plot['tsne2'] = padded_X_embedded[:, 1]

alt.Chart(df_plot).mark_point().encode(
    x="tsne1",
    y="tsne2",
    color=alt.Color("Superpopulation name", scale=alt.Scale(scheme="category20"))
)

alt.Chart(df_plot).mark_point().encode(
    x="PC1",
    y="PC2",
    color=alt.Color("Superpopulation name", scale=alt.Scale(scheme="category20"))
)